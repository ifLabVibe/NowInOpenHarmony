# 生产环境 Docker Compose 配置
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: openharmony-server:prod
    container_name: openharmony-api-prod
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/openharmony_news
      - LOG_LEVEL=INFO
      - ENABLE_SCHEDULER=true
      - BANNER_USE_ENHANCED=${BANNER_USE_ENHANCED:-true}
      - CHROME_BIN=${CHROME_BIN:-/usr/bin/chromium}
      - CHROMEDRIVER_PATH=${CHROMEDRIVER_PATH:-/usr/bin/chromedriver}
      - SELENIUM_USE_USER_DATA_DIR=${SELENIUM_USE_USER_DATA_DIR:-false}
      - SELENIUM_REMOTE_URL=${SELENIUM_REMOTE_URL:-http://selenium:4444/wd/hub}
      - TZ=Asia/Shanghai
      - DEBUG=false
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
    shm_size: 1g
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - openharmony_net
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  postgres:
    image: postgres:15-alpine
    container_name: openharmony-db-prod
    environment:
      POSTGRES_DB: openharmony_news
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Asia/Shanghai
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - openharmony_net
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'

  redis:
    image: redis:7-alpine
    container_name: openharmony-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - openharmony_net
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'

  nginx:
    image: nginx:alpine
    container_name: openharmony-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - openharmony_net
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # 可选：独立Selenium浏览器（用于增强版轮播图爬虫）
  selenium:
    image: selenium/standalone-chromium:latest
    container_name: openharmony-selenium-prod
    shm_size: 2g
    environment:
      - SE_NODE_MAX_SESSIONS=1
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - TZ=Asia/Shanghai
    ports:
      - "4444:4444"
    restart: unless-stopped
    networks:
      - openharmony_net

  # 监控服务（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: openharmony-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - openharmony_net

  grafana:
    image: grafana/grafana:latest
    container_name: openharmony-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - openharmony_net
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  openharmony_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
